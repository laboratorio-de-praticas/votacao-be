generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UsuarioTipos {
  Admin
  Atendente
  Interno
}

enum UsuarioStatus {
  Pendente
  Ativo
  Desligado
}

enum RepresentanteSituacao {
  Pendente
  Ativo
  Desligado
}

enum EventoStatus {
  Ativo
  Em_Preparo
  Em_Contagem
  Finalizado
}

enum EventoTipos {
  Externo
  Interno
}

model Usuario {
  id                  Int         @id @default(autoincrement())
  nome                String?
  senha               String?
  email_institucional String?     @unique
  tipo_usuario        UsuarioTipos
  status_usuario      UsuarioStatus
  data_criacao        DateTime    @default(now())
  data_alteracao      DateTime    @default(now())

  aluno               Aluno?
  avaliador           Avaliador?
<<<<<<< HEAD
=======

  @@map("Usuarios")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model Aluno {
  id_aluno       Int              @id @default(autoincrement())
  fk_id_usuario  Int              @unique
  usuario        Usuario          @relation(fields: [fk_id_usuario], references: [id])
  foto_url       String?
  data_matricula DateTime?
  curso_semestre String?
  data_criacao   DateTime         @default(now())
  data_alteracao DateTime         @default(now())

  representante  Representante?
  projetos       Projeto[]
  votosInternos  VotoInterno[]
<<<<<<< HEAD
=======

  @@map("Alunos")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model Visitante {
  id_visitante    Int            @id @default(autoincrement())
  nome            String?
  telefone        String?
  chave_acesso    String?        @db.Char(4)
  data_criacao    DateTime       @default(now())
  data_alteracao  DateTime       @default(now())

  votosExternos   VotoExterno[]
<<<<<<< HEAD
=======

  @@map("Visitantes")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}


model Avaliador {
  id_avaliador    Int            @id @default(autoincrement())
  fk_id_usuario   Int            @unique
  usuario         Usuario        @relation(fields: [fk_id_usuario], references: [id])
  nome            String?
  telefone        String?
  data_criacao    DateTime       @default(now())
  data_alteracao  DateTime       @default(now())

  votosExternos   VotoExterno[]
  avaliacoes      Avaliacao[]
<<<<<<< HEAD
=======

  @@map("Avaliadores")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model Projeto {
  id_projeto      Int            @id @default(autoincrement())
  titulo          String
  descricao       String
  qrcode          String?
  foto_url        String?
  data_criacao    DateTime       @default(now())
  data_alteracao  DateTime       @default(now())
  fk_id_aluno     Int

  aluno           Aluno          @relation(fields: [fk_id_aluno], references: [id_aluno])
  votosExternos   VotoExterno[]
  avaliacoes      Avaliacao[]
  categorias      CategoriasProjetos[]
<<<<<<< HEAD
=======

  @@map("Projetos")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model Categoria {
  id_categoria    Int            @id @default(autoincrement())
  nome            String?
  descricao       String?
  data_criacao    DateTime       @default(now())
  data_alteracao  DateTime       @default(now())

  projetos        CategoriasProjetos[]
<<<<<<< HEAD
=======

  @@map("Categorias")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model CategoriasProjetos {
  id              Int            @id @default(autoincrement())
  fk_id_projeto   Int
  fk_id_categoria Int
  data_criacao    DateTime       @default(now())
  data_alteracao  DateTime       @default(now())

  projeto         Projeto        @relation(fields: [fk_id_projeto], references: [id_projeto])
  categoria       Categoria      @relation(fields: [fk_id_categoria], references: [id_categoria])

  @@unique([fk_id_projeto, fk_id_categoria])
<<<<<<< HEAD
=======
  @@map("CategoriasProjetos")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model Evento {
  id_evento        Int            @id @default(autoincrement())
  tipo_evento      EventoTipos
  nome_evento      String?
  descricao_evento String?
  status_evento    EventoStatus
  curso_semestre   String?
  data_inicio      DateTime?
  data_fim         DateTime?
  data_criacao     DateTime       @default(now())
  data_alteracao   DateTime       @default(now())

  representantes   Representante[]
  votosInternos    VotoInterno[]
  votosExternos    VotoExterno[]
<<<<<<< HEAD
=======

  @@map("Eventos")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model Representante {
  id_representante     Int                     @id @default(autoincrement())
  fk_id_aluno          Int                     @unique
  fk_id_evento         Int
  qrcode               String?
<<<<<<< HEAD
  RepresentanteSituacao RepresentanteSituacao
=======
  representantesituacao RepresentanteSituacao
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
  data_criacao         DateTime                @default(now())
  data_alteracao       DateTime                @default(now())

  aluno                Aluno                   @relation(fields: [fk_id_aluno], references: [id_aluno])
  evento               Evento                  @relation(fields: [fk_id_evento], references: [id_evento])
  votosRecebidos       VotoInterno[]           @relation("RepresentanteVotos")
<<<<<<< HEAD
=======

  @@map("Representantes")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model VotoInterno {
  id_voto         Int          @id @default(autoincrement())
  fk_id_evento    Int
  fk_id_aluno     Int
  fk_id_representante Int
  data_criacao    DateTime     @default(now())

  evento          Evento       @relation(fields: [fk_id_evento], references: [id_evento])
  aluno           Aluno        @relation(fields: [fk_id_aluno], references: [id_aluno])
  representante   Representante @relation("RepresentanteVotos", fields: [fk_id_representante], references: [id_representante])

  @@unique([fk_id_evento, fk_id_aluno])
<<<<<<< HEAD
=======
  @@map("VotosInternos")
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
}

model VotoExterno {
  id_voto         Int         @id @default(autoincrement())
  fk_id_evento    Int
  fk_id_projeto   Int
  fk_id_visitante Int?
  fk_id_avaliador Int?
  data_criacao    DateTime    @default(now())

  evento          Evento      @relation(fields: [fk_id_evento], references: [id_evento])
  projeto         Projeto     @relation(fields: [fk_id_projeto], references: [id_projeto])
  visitante       Visitante?  @relation(fields: [fk_id_visitante], references: [id_visitante])
  avaliador       Avaliador?  @relation(fields: [fk_id_avaliador], references: [id_avaliador])

  @@unique([fk_id_evento, fk_id_visitante, fk_id_projeto])
  @@unique([fk_id_evento, fk_id_avaliador, fk_id_projeto])
<<<<<<< HEAD
}


=======
  @@map("VotosExternos")
}

>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
model Avaliacao {
  id_avaliacao       Int         @id @default(autoincrement())
  fk_id_avaliador    Int
  fk_id_projeto      Int
  estrelas_inovador  Int
  estrelas_acolhedor Int
  comentario         String?
  data_criacao       DateTime    @default(now())
  data_alteracao     DateTime    @default(now())

  avaliador          Avaliador   @relation(fields: [fk_id_avaliador], references: [id_avaliador])
  projeto            Projeto     @relation(fields: [fk_id_projeto], references: [id_projeto])
<<<<<<< HEAD
}
=======

  @@map("Avaliacoes")
}
>>>>>>> c12f34f (fix: Correção no Schema e no código em relação as regras de negócio)
